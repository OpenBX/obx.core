{
	"module": "obx.core",
	"namespace": "OBX\\Core\\DBSEntities",
	"class": "TestEntity",
	"class_path": "data_entity/DBSEntities",
	"version": "0.1.0",
	"events_id": "TestEntityRow",

	"lang_prefix": "OBX_DBS_TEST_ENTITY",
	"title": {"lang": "%_ENTITY_TITLE", "ru": "Тестовая сущность", "en": "Entity for testing"},
	"description": {"lang": "%_ENTITY_DESCRIPTION", "ru": "Описание тестовой сущности", "en": "Entity for testing description"},

	"table_name": "obx_core_test_entity",
	"table_alias": "E",
	"fields": {
		"ID": {
			"type": "pk_id", "primary_key": true, "auto_increment": true, "deny_null": true,
			"title": {"lang": "%_FLD_TITLE_ID", "ru": "Ид", "en": "Id"},
			"description": {"lang": "%_FLD_DSCR_ID", "ru": "Идентификатор записи", "en": "Identifier of row"}
		},
		"CODE": {
			"type": "code", "deny_null": true,
			"required": true, "required_error": {"lang": "%_CODE_IS_EMPTY","ru": "Поле \"Код\" не заполнено"},
			"title": {"lang": "%_FLD_TITLE_CODE", "ru": "Код", "en": "Code"},
			"description": {"lang": "%_FLD_DSCR_CODE", "ru": "Символьный код", "en": "Symbolic code"}
		},
		"NAME": {
			"type": "string", "length": 255, "deny_null": true,
			"required": true,
			"required_error": {"lang": "%_NAME_IS_EMPTY","ru": "Поле \"Имя\" не заполнено"},
			"title": {"lang": "%_FLD_TITLE_NAME", "ru": "Имя", "en": "Name"},
			"description": {"lang": "%_FLD_DSCR_NAME", "ru": "Имя", "en": "Name"}
		},
		"SORT": {
			"type": "int", "length": 11, "deny_null": true, "default": 100,
			"required": true,
			"required_error": {"lang": "%_SORT_IS_EMPTY", "ru": "Поле \"Сортировка\" не заполнено"},
			"title": {"lang": "&_FLD_TITLE_SORT", "ru": "Сортировка", "en": "Sort"},
			"description": {"lang": "&_FLD_DSCR_SORT", "ru": "Сортировка", "en": "Sort"},
			"get": {"if_null_return": 100}
		},
		"SOME_BCHAR": {
			"type": "bool_char",
			"deny_null": true, "required": true, "default": "Y",
			"get": {"if_null_return": "Y"},
			"title": {"lang": "%_FLD_TITLE_SOME_BCHAR", "ru": "Да/Нет", "en": "Yes/No"},
			"description": {"lang": "%_FLD_DSCR_SOME_BCHAR",
				"ru": "Чекбокс Да/Нет", "en": "Checkbox Yes/No"}
		},
		"CREATE_TIME": {
			"type": "datetime",
			"get": {"format_date":true},
			"title": {"lang": "%_FLD_TITLE_CREATE_TIME", "ru": "Да/Нет", "en": "Yes/No"},
			"description": {"lang": "%_FLD_DSCR_CREATE_TIME", "ru": "Чекбокс Да/Нет", "en": "Checkbox Yes/No"}
		},
		"TIMESTAMP_X": {
			"type": "datetime",
			"get": {"format_date":true},
			"title": {"lang": "%_FLD_TITLE_TIMESTAMP_X", "ru": "Да/Нет", "en": "Yes/No"},
			"description": {"lang": "%_FLD_DSCR_TIMESTAMP_X", "ru": "Чекбокс Да/Нет", "en": "Checkbox Yes/No"}
		},
		"SOME_TEXT": {
			"type": "text",
			"title": {"lang": "%_FLD_TITLE_SOME_TEXT", "ru": "Текст", "en": "Text"},
			"description": {"lang": "%_FLD_DSCR_SOME_TEXT", "ru": "Немного текста", "en": "Some text"}
		},
		"IBLOCK_ID": {
			"type": "iblock_id", "deny_zero": true, "deny_null": true,
			"title": {"lang": "%_FLD_TITLE_IBLOCK_ID", "ru": "Ид Иноблока", "en": "Infoblock Id"},
			"description": {"lang": "%_FLD_DSCR_IBLOCK_ID", "ru": "Идентификатор инфоблока", "en": "Infoblock identifier"}
		},
		"IBLOCK_CODE": {
			"type": "ex",
			"get": {"ref": "IB.CODE"},
			"title": {"lang": "%_FLD_TITLE_IBLOCK_CODE", "ru": "Код Иноблока", "en": "Infoblock code"},
			"description": {"lang": "%_FLD_DSCR_IBLOCK_CODE", "ru": "Символьный код инфоблока", "en": "Symbolic Infoblock code"}
		},
		"IBLOCK_NAME": {
			"type": "ex",
			"get": {"ref": "IB.NAME"},
			"title": {"lang": "%_FLD_TITLE_IBLOCK_CODE", "ru": "Имя иноблока", "en": "Infoblock name"},
			"description": {"lang": "%_FLD_DSCR_IBLOCK_CODE", "ru": "Имя инфоблока", "en": "Infoblock name"}
		},
		"USER_ID": {
			"type": "user_id", "deny_null": false,
			"selected_by_default": false,
			"get": {"ref": "U.ID"},
			"title": {"lang": "%_FLD_TITLE_USER", "ru": "Ид пользователя", "en": "User Id"},
			"description": {"lang": "%_FLD_DSCR_USER", "ru": "Идентификатор пользователь", "en": "User identifier"}
		},
		"USER": {
			"type": "ex",
			"selected_by_default": true,
			"get": {
				"sub_query": "concat(U.NAME, ' ', U.LAST_NAME)",
				"sub_query_4_filter": "E.USER_ID",
				"required_tables": ["U", "E"]
			},
			"title": {"lang": "%_FLD_TITLE_USER", "ru": "Пользователь", "en": "User"},
			"description": {"lang": "%_FLD_DSCR_USER", "ru": "Пользователь", "en": "User"}
		},
		"CUSTOM_CK": {
			"type": "string", "validator": "__custom__", "break_invalid": true,
			"title": {"lang": "%_FLD_TITLE_CUSTOM_CK", "ru": "КастОм", "en": "Custom"},
			"description": {"lang": "%_FLD_DSCR_CUSTOM_CK","ru": "Поле с пороизволной проеркой", "en": "Field with custom check"}
		},
		"VALIDATION": {
			"type": "string",
			"validator": "OBX\\Core\\Validator\\DBSimpleTestValidator", "break_invalid": false,
			"title": {"lang": "%_FLD_TITLE_VALIDATION", "ru": "По валидатору", "en": "By valid"},
			"description": {"lang": "%_FLD_DSCR_VALIDATION","ru": "Поле с проверкой валидатором", "en": "Field with validator check"}
		},
		"SEC_ENT_JSON": {
			"type": "ex",
			"selected_by_default": false,
			"get": {
				"sub_query": "concat('[',group_concat('\"',S.ID, '\":', '\"',S.NAME, '\"'),']')",
				"required_tables": ["S"],
				"required_group_by": ["E.ID"]
			},
			"title": {"lang": "%_FLD_TITLE_SEC_ENT_JSON", "ru": "Список2", "en": "List2"},
			"description": {"lang": "%_FLD_DSCR_SEC_ENT_JSON","ru": "Список элементов 2-й сущности в Json", "en": "Elements list of 2nd entity"}
		},
		"SEC_ENT_CNT": {
			"type": "ex",
			"selected_by_default": false,
			"get": {
				"sub_query": "count(S.ID)",
				"sub_query_4_filter": "SELECT count(SE.ID) FROM obx_core_test_sec_entity as SE WHERE SE.TEST_ENTITY_ID = E.ID",
				"required_tables": ["S"]
			},
			"title": {"lang": "%_FLD_TITLE_SEC_ENT_JSON", "ru": "количество2", "en": "Count2"},
			"description": {"lang": "%_FLD_DSCR_SEC_ENT_JSON","ru": "Количество элементов 2-й сущности", "en": "Elements count of 2nd entity"}
		}
	},
	"unique": {
		"obx_core_test_entity_code_bchar": {
			"fields": ["CODE", "SOME_BCHAR"],
			"duplicate_error": {
				"lang": "%_E_DUP_UQ_CODE",
				"ru": "может быть только две записи с одинаковым CODE и у них должно быть разное значение SOME_BCHAR"
			}
		}
	},
	"index": {
		"obx_core_test_entity_code": ["CODE"]
	},
	"error_nothing_to_delete": {"lang": "%_E_NOTHING_TO_DELETE", "ru": "Ошибка удаления: запись не найдена"},
	"error_nothing_to_update": {"lang": "%_E_NOTHING_TO_UPDATE", "ru": "Ошибка обновления: запись не найдена"},
	"group_by_default": ["E.ID"],
	"sort_by_default":[
		{"by": "SORT", "order": "ASC"},
		{"by": "E.ID", "order": "ASC"}
	],

	"reference": [
		{
			"table": "b_iblock",
			"alias": "IB",
			"type": "left_join",
			"condition": "E.IBLOCK_ID = IB.ID"
		},
		{
			"table": "b_user",
			"alias": "U",
			"type": "left_join",
			"condition": "E.USER_ID = U.ID"
		},
		{
			"entity": "TestSecondEntity.json",
			"alias": "S",
			"type": "left_join",
			"condition": "E.ID = S.TEST_ENTITY_ID"
		}
	]
}